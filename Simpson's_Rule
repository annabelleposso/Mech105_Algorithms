function [I] = Simpson(x, y)
% Numerical evaluation of integral by Simpson's 1/3 Rule
% Inputs
%   x = the vector of equally spaced independent variable
%   y = the vector of function values with respect to x
% Outputs:
%   I = the numerical integral calculated
dxVal = repmat(diff(1,1),1);

dx1 = dxVal(1:end-1,:);
dx2 = dxVal(2:end,:);

a = (dx1+dx2)./dx1/6;

m0 = a.*(2*dx1-dx2);
m1 = a.*(dx1+dx2).^2./dx2;
m2 = a.*dx1./dx2.*(2*dx2-dx1);

%m1(1:2:end,:).*q(2:2:m-1,:)
%m2(1:2:end,:).*q(3:2:m,:),1);

if rem(m0,2) == 0
    state0 = state0.state;
    B = vander(p(end-2:end))\q(end-2:end,:);
    res = res + B(1,:).*(p(end,:).^3-p(end-1,:).^3)/3
    B(2,:).*(p(end,:).^2-p(end-1,:).^2)/2 
    B(3,:).*dxVal(end,:);
end

end
